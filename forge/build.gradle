plugins {
    id 'multiloader-loader'
    id 'net.minecraftforge.gradle' version '[6.0.35,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}
base {
    archivesName = "${mod_name}-forge-${minecraft_version}"
}

configurations {
    shade
    compile.extendsFrom shade
}

mixin {
    config("${mod_id}.mixins.json")
    //config("${mod_id}.forge.mixins.json")
}

jar {
    manifest {
        attributes["MixinConfigs"] = "${mod_id}.mixins.json"//,${mod_id}.forge.mixins.json"
    }
}

jarJar.enable()

tasks.named('jarJar') {
    archiveClassifier = ''
}

jar.finalizedBy('jarJar')

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${parchment_minecraft}"
    copyIdeResources = true
    reobf = false

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformer = at
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.4.1")) {
        jarJar.ranged(it, "[0.4.1,)")
    }
    implementation(jarJar("one.pkg.velocity_rc:velocity-native:3.4.0-SNAPSHOT")) {
        jarJar.ranged(it, "[3.4.0-SNAPSHOT,)")
        exclude group: 'io.netty'
        exclude group: 'com.google.guava'
    }

    // Forge's hack fix
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            fg.component(it)
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

